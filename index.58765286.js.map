{"mappings":"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","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const apiKey = 'live_6MLE4xVISCM9JD833R6DaN0RNW7l2Ri8mBWabGMLck0E35NbUdfXqPNQ0zTPcXUi';\nexport function fetchBreeds() {\n  const url = \"https://api.thecatapi.com/v1/breeds\";\n    return fetch(url, {\n        headers: {\n          'x-api-key': apiKey\n      }\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch breeds\");\n      }\n      return response.json();\n    })\n    .then(data => {\n      return data.map(breed => ({\n        id: breed.id,\n        name: breed.name\n      }));\n    })\n    .catch((error) => {\n      console.error(error);\n      throw error;\n    });\n}\n\nexport function fetchCatByBreed(breedId) {\n  const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}&api_key=live_6MLE4xVISCM9JD833R6DaN0RNW7l2Ri8mBWabGMLck0E35NbUdfXqPNQ0zTPcXUi`;\n    return fetch(url, {\n        headers: {\n          'x-api-key': apiKey\n      }\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch cat by breed\");\n      }\n      return response.json();\n    })\n    .then(data => {\n      if (data.length === 0) {\n        throw new Error('No cat found for the selected breed');\n      }\n      const catData = data[0];\n      const breedInfo = catData.breeds[0];\n      \n      return {\n        image: catData.url,\n        breed: breedInfo.name,\n        description: breedInfo.description,\n        temperament: breedInfo.temperament,\n      };\n    });\n}\n\n\n\n","\nimport { fetchBreeds, fetchCatByBreed } from \"./cat-api.js\";\n\nconst breedSelect = document.querySelector(\".breed-select\");\nconst catInfoDiv = document.querySelector(\".cat-info\");\nconst loader = document.querySelector(\".loader\");\nconst error = document.querySelector(\".error\");\nconst loaderr = document.querySelector(\".loaderr\");\n\n\nfunction populateBreedsSelect() {\n  loader.style.display = \"block\";\n    loader.style.fontWeight = \"bold\";\n  loaderr.style.display = \"block\";\n  breedSelect.style.display = \"none\";\n  error.style.display = \"none\";\n  \n  \n\n  fetchBreeds()\n    .then((breeds) => {\n      breeds.forEach((breed) => {\n        const option = document.createElement(\"option\");\n        option.value = breed.id;\n        option.textContent = breed.name;\n        breedSelect.appendChild(option);\n      });\n\n        loader.style.display = \"none\";\n        loaderr.style.display = \"none\";\n      breedSelect.style.display = \"block\";\n    })\n    .catch(error => {\n      console.error('Failed to fetch breeds:', error);\n      loader.style.display = 'none';\n      loaderr.style.display = \"none\";\n      error.style.display = 'block';\n    });\n}\n\nfunction displayCatInfoByBreed(breedId) {\n    loader.style.display = \"block\";\n    loaderr.style.display = \"block\";\n    catInfoDiv.style.display = \"none\";\n    error.style.display = \"none\";\n\n  fetchCatByBreed(breedId)\n    .then(cat => {\n        \n\n      const image = document.createElement(\"img\");\n        image.src = cat.image;\n        image.style.width = '300px';\n        image.style.marginTop = '15px';\n\n      const name = document.createElement(\"p\");\n        name.textContent = `Breed: ${cat.breed}`;\n        name.classList.add(\"bold-text\");\n\n      const description = document.createElement(\"p\");\n        description.textContent = `Description: ${cat.description}`;\n        description.classList.add(\"bold-text\");\n\n      const temperament = document.createElement(\"p\");\n        temperament.textContent = `Temperament: ${cat.temperament}`;\n        temperament.classList.add(\"bold-text\");\n\n      catInfoDiv.innerHTML = \"\";\n      catInfoDiv.appendChild(image);\n      catInfoDiv.appendChild(name);\n      catInfoDiv.appendChild(description);\n      catInfoDiv.appendChild(temperament);\n\n      loader.style.display = \"none\";\n      loaderr.style.display = \"none\";\n      catInfoDiv.style.display = \"block\";\n    })\n    .catch(() => {\n      loader.style.display = \"none\";\n      loaderr.style.display = \"none\";\n      error.style.display = \"block\";\n    });\n}\n\nbreedSelect.addEventListener(\"change\", event => {\n  const selectedBreedId = event.target.value;\n  displayCatInfoByBreed(selectedBreedId);\n});\n\npopulateBreedsSelect();\n"],"names":["$6b5f202d1456c0af$export$57b7d3a597416aa2","breedId","fetch","headers","then","response","ok","Error","json","data","length","catData","breedInfo","breeds","image","url","breed","name","description","temperament","$1f0dc3b9307be026$var$breedSelect","document","querySelector","$1f0dc3b9307be026$var$catInfoDiv","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$loaderr","$1f0dc3b9307be026$var$displayCatInfoByBreed","style","display","cat","createElement","src","width","marginTop","textContent","classList","add","innerHTML","appendChild","catch","addEventListener","event","target","value","fontWeight","map","id","error","console","forEach","option","error1"],"version":3,"file":"index.58765286.js.map"}